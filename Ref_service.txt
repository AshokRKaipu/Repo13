 

@RestController
@RequestMapping(value="/api/v1/users")
public class UserController {

 @Autowired
 private UserService userService;

@RequestMapping( value="/all/{startRange}/{endRange}" method=GET,   ,consume="Application/Json")
 public ResponseEntity<?> getUsers(@PathVariable("startRange") Interger startRange, @PathVariable("endRange") Integer endRange)  {

try{

List<UserEntity>  listUser = userService.getUsers(startRanage,endRange);

if(listUser  !=null && listUser.size()>0 ){
return ResponseEntity<List<UserEntity>>(listUser, HttpStatus.OK)
}
}catch Excpetion e){
return ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
}
 
 }
 
@RequestMapping( method=GET, producer="Application/Json"  , consumer="Application/Json") 
 public ResponseEntity<UserEntity> getUser( @RequestParam("user-id")  String id) {
 
try{

UserEntity  user = userService.getUser(id);
if(user  !=null  ){
return ResponseEntity<UserEntity>(user , HttpStatus.OK)
}else{
return ResponseEntity<>(HttpStatus.BAD_REQUEST)
}
}catch Excpetion e){
return ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
}

 }
 
@RequestMapping( method=POST, producer="Application/Json"  ,consumer="Application/Json")
 public ResponseEntity<UserEntity> createUser(@RequestBody UserEntity userEntity) {
if(Util.isvalid(userEntity)){
try{

UserEntity  use = userService.createUserr(userEntity);
if(user  !=null  ){
return ResponseEntity<UserEntity>(user , HttpStatus.OK)
}
}catch Excpetion e){
return ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
}
}else{
return ResponseEntity<>(HttpStatus.BAD_REQUEST)
}
 
 }
 
@RequestMapping( value="{id}", method=PUT, producer="Application/Json"  ,consumer="Application/Json")
 public ResponseEntity<UserEntity> updateUser(@PathVariable("id") String id,@RequestBody UserEntity userEntity) {
 
 } 
 
@RequestMapping( value="/{id}" method=DELETE, producer="Application/Json"  ,consumer="Application/Json")
 public void deleteUser(@PathVariable("id") String id) {
 
 }

}

public interface UserService {
 UserEntity getUser(String id);
 List<UserEntity> getUsers();
 UserEntity createUser(UserEntity userEntity);
 UserEntity updateUser(String id,UserEntity userEntity);
 void deleteUser(String id);
}








8:33 PM

Elavarasan Muthusamy

@RestController
@RequestMapping(value="/api/v1/users")
public class UserController {

 @Autowired
 private UserService userService;

 public ResponseEntity<List<UserEntity>> getUsers() {
 
 }
 
 public ResponseEntity<UserEntity> getUser() {
 
 }
 
 public ResponseEntity<UserEntity> createUser(@RequestBody UserEntity userEntity) {
 
 }
 
 public ResponseEntity<UserEntity> updateUser(@PathVariable("id") String id,@RequestBody UserEntity userEntity) {
 
 } 
 
 public void deleteUser(@PathVariable("id") String id) {
 
 }

}

public interface UserService {
 UserEntity getUser(String id);
 List<UserEntity> getUsers();
 UserEntity createUser(UserEntity userEntity);
 UserEntity updateUser(String id,UserEntity userEntity);
 void deleteUser(String id);
}




/api/v1/users - POST, GET ALL
/api/v1/users/id- PUT, GET, DELETE

/api/v1/users?page=2&size=10

